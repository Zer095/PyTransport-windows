<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="classpotential" kind="class" language="C++" prot="public">
    <compoundname>potential</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpotential_1ad6a452da1c8c559ac7f843f1fbeac351" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int potential::nF</definition>
        <argsstring></argsstring>
        <name>nF</name>
        <qualifiedname>potential::nF</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" line="32" column="9" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpotential_1ab2c0c2d49d7644ac3bfeed2629aeface" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int potential::nP</definition>
        <argsstring></argsstring>
        <name>nP</name>
        <qualifiedname>potential::nP</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" line="33" column="9" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" bodystart="33" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classpotential_1afe633604fc0e41502bf498da0bb764a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>potential::potential</definition>
        <argsstring>()</argsstring>
        <name>potential</name>
        <qualifiedname>potential::potential</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" line="38" column="5" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" bodystart="38" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classpotential_1ae9dd3db932482f26a323c31af480feee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double potential::V</definition>
        <argsstring>(vector&lt; double &gt; f, vector&lt; double &gt; p)</argsstring>
        <name>V</name>
        <qualifiedname>potential::V</qualifiedname>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" line="54" column="12" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" bodystart="54" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classpotential_1adba6ef84c84c4664421b2c061d36e220" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt; double &gt; potential::dV</definition>
        <argsstring>(vector&lt; double &gt; f, vector&lt; double &gt; p)</argsstring>
        <name>dV</name>
        <qualifiedname>potential::dV</qualifiedname>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" line="64" column="12" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" bodystart="64" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classpotential_1a91289e516436f318648799dd2b7ab582" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt; double &gt; potential::dVV</definition>
        <argsstring>(vector&lt; double &gt; f, vector&lt; double &gt; p)</argsstring>
        <name>dVV</name>
        <qualifiedname>potential::dVV</qualifiedname>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" line="78" column="12" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" bodystart="78" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classpotential_1a6542cc0f572bafb1f5680e646d95ee0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt; double &gt; potential::dVVV</definition>
        <argsstring>(vector&lt; double &gt; f, vector&lt; double &gt; p)</argsstring>
        <name>dVVV</name>
        <qualifiedname>potential::dVVV</qualifiedname>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" line="96" column="12" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" bodystart="96" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classpotential_1ac8b0b95912daf19d4752d5cb5f5f2c7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int potential::getnF</definition>
        <argsstring>()</argsstring>
        <name>getnF</name>
        <qualifiedname>potential::getnF</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" line="120" column="9" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classpotential_1a84602471e8b108304c31914918e38dc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int potential::getnP</definition>
        <argsstring>()</argsstring>
        <name>getnP</name>
        <qualifiedname>potential::getnP</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" line="125" column="9" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classpotential_1afe633604fc0e41502bf498da0bb764a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>potential::potential</definition>
        <argsstring>()</argsstring>
        <name>potential</name>
        <qualifiedname>potential::potential</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potentialProto.h" line="37" column="5" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potentialProto.h" bodystart="37" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classpotential_1ae9dd3db932482f26a323c31af480feee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double potential::V</definition>
        <argsstring>(vector&lt; double &gt; f, vector&lt; double &gt; p)</argsstring>
        <name>V</name>
        <qualifiedname>potential::V</qualifiedname>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potentialProto.h" line="51" column="12" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potentialProto.h" bodystart="51" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classpotential_1adba6ef84c84c4664421b2c061d36e220" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt; double &gt; potential::dV</definition>
        <argsstring>(vector&lt; double &gt; f, vector&lt; double &gt; p)</argsstring>
        <name>dV</name>
        <qualifiedname>potential::dV</qualifiedname>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potentialProto.h" line="60" column="12" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potentialProto.h" bodystart="60" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classpotential_1a91289e516436f318648799dd2b7ab582" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt; double &gt; potential::dVV</definition>
        <argsstring>(vector&lt; double &gt; f, vector&lt; double &gt; p)</argsstring>
        <name>dVV</name>
        <qualifiedname>potential::dVV</qualifiedname>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potentialProto.h" line="70" column="12" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potentialProto.h" bodystart="70" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classpotential_1a6542cc0f572bafb1f5680e646d95ee0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt; double &gt; potential::dVVV</definition>
        <argsstring>(vector&lt; double &gt; f, vector&lt; double &gt; p)</argsstring>
        <name>dVVV</name>
        <qualifiedname>potential::dVVV</qualifiedname>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potentialProto.h" line="80" column="12" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potentialProto.h" bodystart="80" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classpotential_1ac8b0b95912daf19d4752d5cb5f5f2c7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int potential::getnF</definition>
        <argsstring>()</argsstring>
        <name>getnF</name>
        <qualifiedname>potential::getnF</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potentialProto.h" line="88" column="9" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potentialProto.h" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classpotential_1a84602471e8b108304c31914918e38dc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int potential::getnP</definition>
        <argsstring>()</argsstring>
        <name>getnP</name>
        <qualifiedname>potential::getnP</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potentialProto.h" line="93" column="9" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potentialProto.h" bodystart="93" bodyend="96"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" line="29" column="1" bodyfile="C:/Users/shcos/OneDrive/Desktop/PyTransport3.0-master/PyTransport/PyTransCpp/cppsrc/potential.h" bodystart="30" bodyend="130"/>
    <listofallmembers>
      <member refid="classpotential_1adba6ef84c84c4664421b2c061d36e220" prot="public" virt="non-virtual"><scope>potential</scope><name>dV</name></member>
      <member refid="classpotential_1adba6ef84c84c4664421b2c061d36e220" prot="public" virt="non-virtual"><scope>potential</scope><name>dV</name></member>
      <member refid="classpotential_1a91289e516436f318648799dd2b7ab582" prot="public" virt="non-virtual"><scope>potential</scope><name>dVV</name></member>
      <member refid="classpotential_1a91289e516436f318648799dd2b7ab582" prot="public" virt="non-virtual"><scope>potential</scope><name>dVV</name></member>
      <member refid="classpotential_1a6542cc0f572bafb1f5680e646d95ee0e" prot="public" virt="non-virtual"><scope>potential</scope><name>dVVV</name></member>
      <member refid="classpotential_1a6542cc0f572bafb1f5680e646d95ee0e" prot="public" virt="non-virtual"><scope>potential</scope><name>dVVV</name></member>
      <member refid="classpotential_1ac8b0b95912daf19d4752d5cb5f5f2c7f" prot="public" virt="non-virtual"><scope>potential</scope><name>getnF</name></member>
      <member refid="classpotential_1ac8b0b95912daf19d4752d5cb5f5f2c7f" prot="public" virt="non-virtual"><scope>potential</scope><name>getnF</name></member>
      <member refid="classpotential_1a84602471e8b108304c31914918e38dc0" prot="public" virt="non-virtual"><scope>potential</scope><name>getnP</name></member>
      <member refid="classpotential_1a84602471e8b108304c31914918e38dc0" prot="public" virt="non-virtual"><scope>potential</scope><name>getnP</name></member>
      <member refid="classpotential_1ad6a452da1c8c559ac7f843f1fbeac351" prot="private" virt="non-virtual"><scope>potential</scope><name>nF</name></member>
      <member refid="classpotential_1ab2c0c2d49d7644ac3bfeed2629aeface" prot="private" virt="non-virtual"><scope>potential</scope><name>nP</name></member>
      <member refid="classpotential_1afe633604fc0e41502bf498da0bb764a8" prot="public" virt="non-virtual"><scope>potential</scope><name>potential</name></member>
      <member refid="classpotential_1afe633604fc0e41502bf498da0bb764a8" prot="public" virt="non-virtual"><scope>potential</scope><name>potential</name></member>
      <member refid="classpotential_1ae9dd3db932482f26a323c31af480feee" prot="public" virt="non-virtual"><scope>potential</scope><name>V</name></member>
      <member refid="classpotential_1ae9dd3db932482f26a323c31af480feee" prot="public" virt="non-virtual"><scope>potential</scope><name>V</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
